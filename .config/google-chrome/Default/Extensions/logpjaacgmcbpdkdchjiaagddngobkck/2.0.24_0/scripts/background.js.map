{"version":3,"sources":["scripts/background.js"],"names":["copyToClipboard","text","copyDiv","document","createElement","contentEditable","body","appendChild","innerHTML","unselectable","focus","execCommand","removeChild","selectTab","direction","chrome","tabs","query","currentWindow","length","active","currentTabInArray","toSelect","currentTab","index","update","id","highlighted","globToRegex","glob","test","RegExp","replace","specialChars","regexChars","i","c","charAt","push","indexOf","join","isAllowedSite","keySetting","url","blacklist","allowed","sitesArray","forEach","site","match","handleAction","action","request","arguments","undefined","browsingData","remove","since","downloads","create","sessions","getRecentlyClosed","maxResults","closedTab","restore","sessionsId","tab","duplicate","pinned","ids","currentTabIndex","toggle","move","createNewTab","openurl","matchurl","queryOption","selected","windows","windowId","focused","incognito","getZoom","zoomFactor","console","log","setZoom","executeScript","code","bookmarks","search","title","bookmark","nodes","openNode","node","decodeURI","commands","onCommand","addListener","command","runtime","onMessage","sender","sendResponse","currentUrl","settings","JSON","parse","localStorage","shortkeys","keys","key"],"mappings":"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","file":"scripts/background.js","sourcesContent":["'use strict';\n\nvar copyToClipboard = function copyToClipboard(text) {\n    var copyDiv = document.createElement('div');\n    copyDiv.contentEditable = true;\n    document.body.appendChild(copyDiv);\n    copyDiv.innerHTML = text;\n    copyDiv.unselectable = 'off';\n    copyDiv.focus();\n    document.execCommand('SelectAll');\n    document.execCommand('Copy', false, null);\n    document.body.removeChild(copyDiv);\n};\n\nvar selectTab = function selectTab(direction) {\n    chrome.tabs.query({ currentWindow: true }, function (tabs) {\n        if (tabs.length <= 1) {\n            return;\n        }\n        chrome.tabs.query({ currentWindow: true, active: true }, function (currentTabInArray) {\n            var currentTab = currentTabInArray[0];\n            var toSelect;\n            switch (direction) {\n                case 'next':\n                    toSelect = tabs[(currentTab.index + 1 + tabs.length) % tabs.length];\n                    break;\n                case 'previous':\n                    toSelect = tabs[(currentTab.index - 1 + tabs.length) % tabs.length];\n                    break;\n                case 'first':\n                    toSelect = tabs[0];\n                    break;\n                case 'last':\n                    toSelect = tabs[tabs.length - 1];\n                    break;\n            }\n            chrome.tabs.update(toSelect.id, { highlighted: true });\n            chrome.tabs.update(currentTab.id, { highlighted: false });\n        });\n    });\n};\n\n/**\n * Helper function to convert glob/wildcard * syntax to valid RegExp for URL checking.\n *\n * @param glob\n * @returns {RegExp}\n */\nvar globToRegex = function globToRegex(glob) {\n    // Use a regexp if the url starts and ends with a slash `/`\n    if (/^\\/.*\\/$/.test(glob)) return new RegExp(glob.replace(/^\\/(.*)\\/$/, '$1'));\n\n    var specialChars = '\\\\^$*+?.()|{}[]';\n    var regexChars = ['^'];\n    for (var i = 0; i < glob.length; ++i) {\n        var c = glob.charAt(i);\n        if (c === '*') {\n            regexChars.push('.*');\n        } else {\n            if (specialChars.indexOf(c) >= 0) {\n                regexChars.push('\\\\');\n            }\n            regexChars.push(c);\n        }\n    }\n    regexChars.push('$');\n    return new RegExp(regexChars.join(''));\n};\n\n/**\n * Helper function to determine if the current site is blacklisted or not.\n *\n * @param keySetting\n * @returns {boolean}\n */\nvar isAllowedSite = function isAllowedSite(keySetting, url) {\n    if (keySetting.blacklist !== 'true' && keySetting.blacklist !== 'whitelist') {\n        // This shortcut is allowed on all sites (not blacklisted or whitelisted).\n        return true;\n    }\n    var allowed = keySetting.blacklist === 'true';\n    keySetting.sitesArray.forEach(function (site) {\n        if (url.match(globToRegex(site))) {\n            allowed = !allowed;\n        }\n    });\n    return allowed;\n};\n\nvar handleAction = function handleAction(action) {\n    var request = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (action === 'cleardownloads') {\n        chrome.browsingData.remove({ 'since': 0 }, { 'downloads': true });\n    } else if (action === 'nexttab') {\n        selectTab('next');\n    } else if (action === 'prevtab') {\n        selectTab('previous');\n    } else if (action === 'firsttab') {\n        selectTab('first');\n    } else if (action === 'lasttab') {\n        selectTab('last');\n    } else if (action === 'newtab') {\n        chrome.tabs.create({});\n    } else if (action === 'reopentab') {\n        chrome.sessions.getRecentlyClosed({ maxResults: 1 }, function (sessions) {\n            var closedTab = sessions[0];\n            chrome.sessions.restore(closedTab.sessionsId);\n        });\n    } else if (action === 'closetab') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.tabs.remove(tab[0].id);\n        });\n    } else if (action === 'clonetab') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.tabs.duplicate(tab[0].id);\n        });\n    } else if (action === 'onlytab') {\n        chrome.tabs.query({ currentWindow: true, pinned: false, active: false }, function (tabs) {\n            var ids = [];\n            tabs.forEach(function (tab) {\n                ids.push(tab.id);\n            });\n            chrome.tabs.remove(ids);\n        });\n    } else if (action === 'closelefttabs' || action === 'closerighttabs') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tabs) {\n            var currentTabIndex = tabs[0].index;\n            chrome.tabs.query({ currentWindow: true, pinned: false, active: false }, function (tabs) {\n                var ids = [];\n                tabs.forEach(function (tab) {\n                    if (action === 'closelefttabs' && tab.index < currentTabIndex || action === 'closerighttabs' && tab.index > currentTabIndex) {\n                        ids.push(tab.id);\n                    }\n                });\n                chrome.tabs.remove(ids);\n            });\n        });\n    } else if (action === 'togglepin') {\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tab) {\n            var toggle = !tab[0].pinned;\n            chrome.tabs.update(tab[0].id, { pinned: toggle });\n        });\n    } else if (action === 'copyurl') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            copyToClipboard(tab[0].url);\n        });\n    } else if (action === 'movetableft') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            if (tab[0].index > 0) {\n                chrome.tabs.move(tab[0].id, { 'index': tab[0].index - 1 });\n            }\n        });\n    } else if (action === 'movetabright') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.tabs.move(tab[0].id, { 'index': tab[0].index + 1 });\n        });\n    } else if (action === 'gototab') {\n        var createNewTab = function createNewTab() {\n            chrome.tabs.create({ url: request.openurl });\n        };\n        if (request.matchurl) {\n            var queryOption = { url: request.matchurl };\n            if (request.currentWindow) {\n                queryOption.currentWindow = true;\n            }\n            chrome.tabs.query(queryOption, function (tabs) {\n                if (tabs.length > 0) {\n                    chrome.tabs.update(tabs[0].id, { selected: true });\n                    chrome.windows.update(tabs[0].windowId, { focused: true });\n                } else {\n                    createNewTab();\n                }\n            });\n        } else {\n            createNewTab();\n        }\n    } else if (action === 'newwindow') {\n        chrome.windows.create();\n    } else if (action === 'newprivatewindow') {\n        chrome.windows.create({ incognito: true });\n    } else if (action === 'closewindow') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.windows.remove(tab[0].windowId);\n        });\n    } else if (action === 'zoomin') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.tabs.getZoom(tab[0].id, function (zoomFactor) {\n                console.log(zoomFactor);\n                chrome.tabs.setZoom(tab[0].id, zoomFactor + 0.1);\n            });\n        });\n    } else if (action === 'zoomout') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.tabs.getZoom(tab[0].id, function (zoomFactor) {\n                chrome.tabs.setZoom(tab[0].id, zoomFactor - 0.1);\n            });\n        });\n    } else if (action === 'zoomreset') {\n        chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n            chrome.tabs.setZoom(tab[0].id, 0);\n        });\n    } else if (action === 'back') {\n        chrome.tabs.executeScript(null, { 'code': 'window.history.back()' });\n    } else if (action === 'forward') {\n        chrome.tabs.executeScript(null, { 'code': 'window.history.forward()' });\n    } else if (action === 'reload') {\n        chrome.tabs.executeScript(null, { 'code': 'window.location.reload()' });\n    } else if (action === 'top') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollTo(0, 0)' });\n    } else if (action === 'bottom') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollTo(0, document.body.scrollHeight)' });\n    } else if (action === 'scrollup') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(0,-50)' });\n    } else if (action === 'scrollupmore') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(0,-500)' });\n    } else if (action === 'scrolldown') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(0,50)' });\n    } else if (action === 'scrolldownmore') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(0,500)' });\n    } else if (action === 'scrollleft') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(-50,0)' });\n    } else if (action === 'scrollleftmore') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(-500,0)' });\n    } else if (action === 'scrollright') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(50,0)' });\n    } else if (action === 'scrollrightmore') {\n        chrome.tabs.executeScript(null, { 'code': 'window.scrollBy(500,0)' });\n    } else if (action === 'openbookmark' || action === 'openbookmarknewtab' || action === 'openbookmarkbackgroundtab') {\n        chrome.bookmarks.search({ title: request.bookmark }, function (nodes) {\n            var openNode = void 0;\n            for (var i = nodes.length; i-- > 0;) {\n                var node = nodes[i];\n                if (node.url && node.title === request.bookmark) {\n                    openNode = node;\n                    break;\n                }\n            }\n            if (action === 'openbookmark') {\n                chrome.tabs.query({ currentWindow: true, active: true }, function (tab) {\n                    chrome.tabs.update(tab[0].id, { url: decodeURI(openNode.url) });\n                });\n            } else if (action === 'openbookmarkbackgroundtab') {\n                chrome.tabs.create({ url: decodeURI(openNode.url), active: false });\n            } else {\n                chrome.tabs.create({ url: decodeURI(openNode.url) });\n            }\n        });\n    } else {\n        return false;\n    }\n    return true;\n};\n\nchrome.commands.onCommand.addListener(function (command) {\n    handleAction(command);\n});\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    var action = request.action;\n    if (action === 'getKeys') {\n        var currentUrl = request.url;\n        var settings = JSON.parse(localStorage.shortkeys);\n        var keys = [];\n        if (settings.keys.length > 0) {\n            settings.keys.forEach(function (key) {\n                if (isAllowedSite(key, currentUrl)) {\n                    keys.push(key);\n                }\n            });\n        }\n        sendResponse(keys);\n    }\n    handleAction(action, request);\n});"],"sourceRoot":"/source/"}